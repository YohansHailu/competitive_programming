class Solution(object):
    def add(self, num1, num2):
        """
        :type num1: str
        :type num2: str
        :rtype: str
        """
        num1 = list(num1);
        num2 = list(num2);
        num1.reverse();
        num2.reverse();
        
        glen = len(num1) if len(num1) > len(num2) else len(num2)
        carry = 0
        sum_string = []

        for i in range(glen):
            isum=carry
            if i < len(num1):
                isum += int(num1[i])
            if i < len(num2):
                isum+=int(num2[i])
            
            carry = isum//10;
            isum %=10;
            sum_string+=str(isum)
        
        if carry ==1:
            sum_string+=str(1)
        
        sum_string.reverse()
        sum_string="".join(sum_string)
        return sum_string
    
    def addNtimes(self,num,n):
        if(n==0):
            return "0"
        result = num
        for i in range(n-1):
            result = self.add(result,num)
        return result
    
    def multiply(self, num1, num2):
        if num1 == "0" or num2 == "0":
            return "0"
        
        result = "0"
        shift = 0;
        for i in range(len(num1)-1,-1,-1):
            itimes = self.addNtimes(num2,int(num1[i]))
            result = self.add(result,itimes+"0"*shift)
            shift+=1;        
        return result;
